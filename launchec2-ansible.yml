#Pre-requisite
#Pip is not available in RHEL core repositories. To install pip we need to enable the EPEL repository:
#sudo yum install epel-release
#Once the EPEL repository is enabled we can install pip and all of itâ€™s dependencies with the following command:
#sudo yum install python-pip

#Install development tools

#sudo yum install python-devel
#Development tools are required for building Python modules, you can install them with:
#sudo yum groupinstall 'development tools'

#sudo pip install --upgrade pip
#sudo pip install boto3
#sudo pip install boto
#sudo yum install ansible

---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: ansible-automation # Change the security group name here
      image: ami-0b500ef59d8335eee # This is an AMI Redhat Linux 64 bit distribution
      keypair: linux_aws # This is one of my keys that i already have in AWS
      region: us-east-2 # Change the Region
      count: 1
      hostpath: /etc/ansible/hosts
      hoststring: "ansible_ssh_user=ec2-user ansible_ssh_private_key_file=/root/linux_aws.pem"

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - debug: var=ec2

      - debug: var=ec2.instances

      - debug: var=ec2.instances[0].public_ip

      - name: add ec2 instances to a new group
        add_host:
          hostname: "{{ item.public_ip }}"
          groups: "ec2"
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: docker-nginx-webserver

      - name: Add the newly created EC2 instance(s) to host group
        lineinfile: dest={{ hostpath }}
                    regexp={{ item.public_ip }}
                    insertafter="[webserver]"
                    line="{{ item.public_ip }} {{hoststring}}"
                    state=present
        with_items: "{{ ec2.instances }}"

      - wait_for: path={{ hostpath }} search_regex={{hoststring}}

      - name: Wait for SSH to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"
      - name: Add IP to ec2_hosts group
        add_host: hostname={{ item.public_ip }} groups=ec2_hosts
        with_items: "{{ ec2.instances }}"
